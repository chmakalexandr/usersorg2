<?php

namespace Intex\OrgBundle\Entity\Repository;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Return users from array $users that exist in DB
     * @param ArrayCollection $users
     * @return ArrayCollection
     */
    public function getNewUsers(ArrayCollection $users)
    {
        $usersInns = $this->getInn($users);

        $db = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.inn IN (:inns)')
            ->setParameter('inns', $usersInns);
        $existingUsers = $db->getQuery()->getResult();

        return $this->getDiffUsers($users, $existingUsers);
    }

    protected function getDiffUsers($users, $existingUsers)
    {
        $usersInns = $this->getInn($users);
        $existingInns = $this->getInn($existingUsers);

        $newInns = array_diff($usersInns, $existingInns);
        $newUsers = new ArrayCollection();
        if ($newInns) {
            foreach ($users as $human) {
                if (in_array($human->getInn(), $newInns)){
                    $newUsers[] = $human;
                }
            }
        }
        return $newUsers;
    }

    protected function getInn($users)
    {
        foreach ($users as $human){
            $usersInns[] = $human->getInn();
        }

        return $usersInns;
    }
}
